{"version":3,"sources":["../../src/bin/create-index.js"],"names":["argv","yargs","demand","options","recursive","alias","default","description","type","ignoreUnsafe","ignoreDirectories","update","banner","extensions","implicitDefault","example","_","updateIndex"],"mappings":";;AAEA;;;;AACA;;;;AAIA,MAAMA,OAAOC,gBACVC,MADU,CACH,CADG,EAEVC,OAFU,CAEF;AACPC,aAAW;AACTC,WAAO,GADE;AAETC,aAAS,KAFA;AAGTC,iBAAa,8EAHJ;AAITC,UAAM;AAJG;AADJ,CAFE,EAUVL,OAVU,CAUF;AACPM,gBAAc;AACZJ,WAAO,GADK;AAEZC,aAAS,KAFG;AAGZC,iBAAa,qDAHD;AAIZC,UAAM;AAJM;AADP,CAVE,EAkBVL,OAlBU,CAkBF;AACPO,qBAAmB;AACjBL,WAAO,GADU;AAEjBC,aAAS,KAFQ;AAGjBC,iBAAa,yFAHI;AAIjBC,UAAM;AAJW;AADZ,CAlBE,EA0BVL,OA1BU,CA0BF;AACPQ,UAAQ;AACNN,WAAO,GADD;AAENC,aAAS,KAFH;AAGNC,iBAAa,4DAHP;AAINC,UAAM;AAJA;AADD,CA1BE,EAkCVL,OAlCU,CAkCF;AACPS,UAAQ;AACNL,iBAAa,kDADP;AAENC,UAAM;AAFA;AADD,CAlCE,EAwCVL,OAxCU,CAwCF;AACPU,cAAY;AACVR,WAAO,GADG;AAEVC,aAAS,CAAC,IAAD,CAFC;AAGVC,iBAAa,2IAHH;AAIVC,UAAM;AAJI;AADL,CAxCE,EAgDVL,OAhDU,CAgDF;AACPW,mBAAiB;AACfT,WAAO,GADQ;AAEfC,aAAS,KAFM;AAGfC,iBAAa,kJAHE;AAIfC,UAAM;AAJS;AADV,CAhDE,EAwDVO,OAxDU,CAyDT,oCAzDS,EA0DT,4GA1DS,EA4DVA,OA5DU,CA6DT,qCA7DS,EA8DT,qHA9DS,EAgEVA,OAhEU,CAiET,wCAjES,EAkET,0HAlES,EAoEVf,IApEH;;AAsEA,8BAAcA,KAAKgB,CAAnB,EAAsB;AACpBJ,UAAQZ,KAAKY,MADO;AAEpBC,cAAYb,KAAKa,UAFG;AAGpBH,qBAAmBV,KAAKU,iBAHJ;AAIpBD,gBAAcT,KAAKS,YAJC;AAKpBK,mBAAiBd,KAAKc,eALF;AAMpBV,aAAWJ,KAAKI,SANI;AAOpBa,eAAajB,KAAKW;AAPE,CAAtB","file":"create-index.js","sourcesContent":["\n\nimport yargs from 'yargs';\nimport {\n    writeIndexCli\n} from '../utilities';\n\nconst argv = yargs\n  .demand(1)\n  .options({\n    recursive: {\n      alias: 'r',\n      default: false,\n      description: 'Create/update index files recursively. Halts on any unsafe \"index.js\" files.',\n      type: 'boolean'\n    }\n  })\n  .options({\n    ignoreUnsafe: {\n      alias: 'i',\n      default: false,\n      description: 'Ignores unsafe \"index.js\" files instead of halting.',\n      type: 'boolean'\n    }\n  })\n  .options({\n    ignoreDirectories: {\n      alias: 'd',\n      default: false,\n      description: 'Ignores importing directories into the index file, even if they have a safe \"index.js\".',\n      type: 'boolean'\n    }\n  })\n  .options({\n    update: {\n      alias: 'u',\n      default: false,\n      description: 'Updates only previously created index files (recursively).',\n      type: 'boolean'\n    }\n  })\n  .options({\n    banner: {\n      description: 'Add a custom banner at the top of the index file',\n      type: 'string'\n    }\n  })\n  .options({\n    extensions: {\n      alias: 'x',\n      default: ['js'],\n      description: 'Allows some extensions to be parsed as valid source. First extension will always be preferred to homonyms with another allowed extension.',\n      type: 'array'\n    }\n  })\n  .options({\n    implicitDefault: {\n      alias: 'm',\n      default: false,\n      description: 'Uses implicit defaults as implicit instead of explicit. export { default as thing } from \\'./thing.js\\' becomes export thing from \\'./thing.js\\'',\n      type: 'boolean'\n    }\n  })\n  .example(\n    'create-index ./src ./src/utilities',\n    'Creates or updates an existing create-index index file in the target (./src, ./src/utilities) directories.'\n  )\n  .example(\n    'create-index --update ./src ./tests',\n    'Finds all create-index index files in the target directories and descending directories. Updates found index files.'\n  )\n  .example(\n    'create-index ./src --extensions js jsx',\n    'Creates or updates an existing create-index index file in the target (./src) directory for both .js and .jsx extensions.'\n  )\n  .argv;\n\nwriteIndexCli(argv._, {\n  banner: argv.banner,\n  extensions: argv.extensions,\n  ignoreDirectories: argv.ignoreDirectories,\n  ignoreUnsafe: argv.ignoreUnsafe,\n  implicitDefault: argv.implicitDefault,\n  recursive: argv.recursive,\n  updateIndex: argv.update\n});\n"]}